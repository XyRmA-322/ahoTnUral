const TelegramBot = require('node-telegram-bot-api');
const token = '7886214781:AAEtRo_p9BaKBjEhQAmsDkfAf0Qurl2VR44';
const TARGET_CHAT_ID = '-4632010105'; //'-4632010105';

//'-4753301057' –û—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç –ê–•–û
//'-4632010105' –¢–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç 
const express = require('express');
const app = express();
app.get('/', (req, res) => res.send('Bot is alive2!'));
app.listen(3000, () => console.log('Server started'));

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —Å–≤—è–∑–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
const messageStore = new Map();

const bot = new TelegramBot(token, { polling: true });

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', (msg) => {
  // –ï—Å–ª–∏ —ç—Ç–æ –æ—Ç–≤–µ—Ç –≤ —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø–µ
  //console.log(messageStore);
  if (msg.chat.id.toString() === TARGET_CHAT_ID && msg.reply_to_message) {
    handleGroupReply(msg);
    return;
  }

  // –ï—Å–ª–∏ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  if (msg.chat.type === 'private' && !msg.reply_to_message) {
    handleUserMessage(msg);
  }
});

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
bot.on('polling_error', (error) => {
  console.error('Polling error:', error);
});

bot.on('webhook_error', (error) => {
  console.error('Webhook error:', error);
});

process.on('unhandledRejection', (error) => {
  console.error('Unhandled Rejection:', error);
});

// –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø–∏—Å–µ–π –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞
/*setInterval(() => {
  const now = Date.now();
  // –ï—Å–ª–∏ –Ω—É–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å timestamp —Å–æ–æ–±—â–µ–Ω–∏–π
  for (const [key, value] of messageStore.entries()) {
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å timestamp –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏
    // –∏ —É–¥–∞–ª—è—Ç—å —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏
  }
  console.log(`–û—á–∏—Å—Ç–∫–∞ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞. –¢–µ–∫—É—â–∏–π —Ä–∞–∑–º–µ—Ä: ${messageStore.size}`);
}, 24 * 60 * 60 * 1000);*/

async function handleUserMessage(msg) {
  const chatId = msg.chat.id;
  const text = msg.text || '';
  const messageId = msg.message_id;

  if (text.startsWith('/')) {
    await bot.sendMessage(chatId, '‚ÑπÔ∏è –°–æ–æ–±—â–µ–Ω–∏—è-–∫–æ–º–∞–Ω–¥—ã –Ω–µ –Ω–∞–ø—Ä–∞–≤–ª—è—é—Ç—Å—è.');
    return;
  }

  try {
    const forwardedMsg = await bot.forwardMessage(TARGET_CHAT_ID, chatId, messageId);
    
    messageStore.set(forwardedMsg.message_id, {
      originalChatId: chatId,
      originalMessageId: messageId
    });

    await bot.sendMessage(chatId, '‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–æ!');
    
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏:', err);
    
    if (err.response && err.response.statusCode === 403) {
      await bot.sendMessage(chatId, '‚ùå –ë–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –ø–µ—Ä–µ—Å–ª–∞—Ç—å –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –í–æ–∑–º–æ–∂–Ω–æ, —É –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –≤ —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø–µ.');
    } else {
      await bot.sendMessage(chatId, '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.');
    }
  }
}
/*
async function handleUserMessage(msg) {
  const chatId = msg.chat.id;
  const text = msg.text || '';
  const messageId = msg.message_id;

  // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
  if (text.startsWith('/')) {
    await bot.sendMessage(chatId, '‚ÑπÔ∏è –°–æ–æ–±—â–µ–Ω–∏—è-–∫–æ–º–∞–Ω–¥—ã –Ω–µ –Ω–∞–ø—Ä–∞–≤–ª—è—é—Ç—Å—è.');
    return;
  }

  try {
    // –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É
    const forwardedMsg = await bot.forwardMessage(TARGET_CHAT_ID, chatId, messageId);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–≤—è–∑—å: ID –≤ –≥—Ä—É–ø–ø–µ ‚Üí –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —á–∞—Ç –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
    messageStore.set(forwardedMsg.message_id, {
      originalChatId: chatId,
      originalMessageId: messageId
    });

    await bot.sendMessage(chatId, '‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–æ!');
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏:', err);
    await bot.sendMessage(chatId, '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.');
  }
}*/

async function handleGroupReply(msg) {
  const repliedMsgId = msg.reply_to_message.message_id;
  const originalData = messageStore.get(repliedMsgId);

  if (!originalData) {
    console.log('–ù–µ –Ω–∞–π–¥–µ–Ω–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–≤–µ—Ç–∞');
    return;
  }

  try {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await bot.sendMessage(
      originalData.originalChatId,
      `üì® –û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n\n${msg.text || '[–º–µ–¥–∏–∞-—Å–æ–æ–±—â–µ–Ω–∏–µ]'}`,
      { reply_to_message_id: originalData.originalMessageId }
    );

    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–∫—Ü–∏—é –≤ –≥—Ä—É–ø–ø–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    await bot.sendMessage(TARGET_CHAT_ID, '‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é', {
      reply_to_message_id: msg.message_id
    });
    
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:', err);
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª—É—á–∞—è, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞
    if (err.response && err.response.statusCode === 403) {
      await bot.sendMessage(
        TARGET_CHAT_ID, 
        '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞',
        { reply_to_message_id: msg.message_id }
      );
      // –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
      messageStore.delete(repliedMsgId);
    }
  }
}

/*async function handleGroupReply(msg) {
  const repliedMsgId = msg.reply_to_message.message_id;
  const originalData = messageStore.get(repliedMsgId);

  if (!originalData) {
    console.log('–ù–µ –Ω–∞–π–¥–µ–Ω–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–≤–µ—Ç–∞');
    return;
  }

  try {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await bot.sendMessage(
      originalData.originalChatId,
      `üì® –û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n\n${msg.text || '[–º–µ–¥–∏–∞-—Å–æ–æ–±—â–µ–Ω–∏–µ]'}`,
      { reply_to_message_id: originalData.originalMessageId }
    );

    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–∫—Ü–∏—é –≤ –≥—Ä—É–ø–ø–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    await bot.sendMessage(TARGET_CHAT_ID, '‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é', {
      reply_to_message_id: msg.message_id
    });
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:', err);
  }
}*/

console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
